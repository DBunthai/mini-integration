classDiagram

    EntityBased <|-- Customer 
    Customer --> Contact
    Customer --> Address
    Customer ..> MemberShipPolicy
    CustomerSetting "1" --> "1" Customer
    CustomerSetting "1" --> "*" CustomerNotificationConfig
    CustomerNotificationConfig "1" --> "1" NotificationConfig
    NotificationConfig "1" --> "1" NotificationType

    Customer "1" --> "*" FileInfo
    
    CustomerDAO --> Customer
    FileInfoDAO --> FileInfo

    CustomerQueryService --> CustomerDAO
    FileInfoQueryService --> FileInfoDAO

    CustomerCommandService --> CustomerDAO
    FileInfoCommandService --> FileInfoDAO    

    CustomerQueryController --> CustomerQueryService
    FileInfoQueryController --> FileInfoQueryService

    namespace Domain {
    
        class EntityBased {
            - Integer seq
            - UUID id
            - OffsetDateTime createdDate
            - OffsetDateTime lastModifiedDate
            - String createdBy
            - String lastModifiedBy
        }

        class MemberShipType {
            <<Enum>>
            BRONZE,
            SILIVER,
            GOLD,
            PLATINUM

        }

        class MemberShipPolicy {         
            - MemberShipType: MemberShipType
            - requiredBalance: BigDecimal
            - requiredLoyaltyYear: int
            - List<MembershipPolicy> memberShipPolicies = List.of(
                 MembershipPolicy[BRONZE, BigDecimal.ZERO, 0],
                 MembershipPolicy[SILVER,  "10000", 2],
                 MembershipPolicy[GOLD,  "20000", 5],
                 MembershipPolicy[PLATINUM,  "50000", 8]
            );

            - getMemberShip(postedBalance: BigDecimal, registedDate: OffsetDateTime): MemberShipLevel
        }

        class DailyPostedBalance {
            <<ValueObject>>
            - customer: Customer
            - dailyPostedAmount: BigDecimal
            - registeredDate: OffsetDateTime
        }


        class Customer {
            <<Entity>>

            - String firstName
            - String lastName
            - Gender gender
            - String description
            - Contact contact
            - Address address
            - List<FileInfo> fileInfo
            - memberShip MemberShipType @Transient


        }

        

        class Contact {
            <<ValueObject>>
            - String phone
            - String email
        }


        class Address {
            <<ValueObject>>
            - String line
            - String city
            - String state
            - String zipCode
        }    

        class Gender {
            <<Enum>>
            MALE
            FEMALE
        }

        class NotificationChannel {
            <<Enum>>
            Email,
            SMS,
            Device
        }

        class NotificationStatus {
            <<Enum>>
            ACTIVE,
            INACTIVE
        }

        class CustomerNotificationConfig {
            <<Entity>>
            - customerSetting: CustomerSetting
            - isEnabled: bool
            - notificationConfig: NotificationConfig
        }

        class NotificationConfig {
            <<Entity>>
            - notificationType: NotificationType
            - notificationChannel: NotificationChannel
            - requiredEnable: bool (default false)
            - defaultEnabled: bool (default true)
            - description: String
            - status: NotificationStatus (active / inaction only include in response when is active)
        }

        class NotificationType {
            <<Entity>>
            - name: String
            - description: String
            - status: NotificationStatus (active / inaction only include in response when is active)
        }

        class RegularPostedBalanced {
            <<Enum>>
            DAILY,
            WEEKLY,
            MONTHLY
        }

        class CustomerSetting {
            <<ValueObject>>
            - customer: Customer
            - customerNotificationConfigs: List<CustomerNotificationConfig>
            - regularPostedBalance: RegularPostedBalanced

        }

        class FileInfo {
            <<Entity>>
            - Integer seq
            - UUID fileKey
            - String fileName
            - String extension
            - number fileSize
        }
    }

    namespace Repository {
            class CustomerDAO { }
            class FileInfoDAO { }
    }

    namespace QueryService {
            class CustomerQueryService { }
            class FileInfoQueryService { }
    }

    namespace CommandService {
            class CustomerCommandService { }
            class FileInfoCommandService { }
    }

    namespace QueryController {
            class CustomerQueryController { }
            class FileInfoQueryController { }
    }

    namespace CommandController {
            class CustomerCommandController { }
            class FileInfoCommandController { }
    }

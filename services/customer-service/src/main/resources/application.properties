spring.profiles.active=local

spring.application.name=customer-service

spring.datasource.url=jdbc:postgresql://${PG_HOST:localhost}:${PG_PORT:5432}/customer
spring.datasource.username=${PG_USERNAME:mini}
spring.datasource.password=${PG_PASSWORD:mini1234}
spring.datasource.driver-class-name=org.postgresql.Driver

jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
jpa.hibernate.ddl-auto=none
jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}
jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.jdbc.time_zone=${JPA_TZ:America/New_York}
spring.jackson.time-zone=${JACKSON_TZ:America/New_York}
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=true

spring.data.redis.sentinel.master=${REDIS_MASTER:mymaster}
spring.data.redis.sentinel.nodes=${REDIS_SENTINELS:localhost:26379,localhost:26380}
spring.data.redis.timeout=${REDIS_TIMEOUT:5000}
spring.data.redis.lettuce.shutdown-timeout=100

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=${LIQUIBASE_ENABLED:true}
#spring.liquibase.contexts=default
spring.liquibase.drop-first=false
#spring.liquibase.clear-checksums=true


# Kafka bootstrap servers
spring.kafka.bootstrap-servers= ${KAFKA_SERVER:localhost:9092,localhost:9192,localhost:9292}

# Kafka consumer configuration
spring.kafka.consumer.group-id=customer-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type=mini.integration.customerservice.domain.event.BalancePostedEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=cat:mini.integration.customerservice.domain.event.BalancePostedEvent

# Kafka producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=mini.integration.customerservice.domain.event.BalancePostedEvent
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
## Optional: enable auto-creation of topics (not recommended for production)
#spring.kafka.admin.auto-create=true


logging.file.path=./logs
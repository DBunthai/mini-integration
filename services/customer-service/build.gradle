plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
//    id 'checkstyle'
}

group = 'mini.integration'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly("org.mapstruct:mapstruct:1.6.3")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.6.3")

    implementation("com.googlecode.libphonenumber:libphonenumber:9.0.7")

    implementation("org.springframework.boot:spring-boot-starter-validation:3.5.0")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'net.datafaker:datafaker:2.0.2'
    implementation 'org.springframework.kafka:spring-kafka'
    runtimeOnly 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        target 'src/**/*.java'
        targetExclude 'build/**', 'src/test/**', 'src/generated/**'
        eclipse().configFile("eclipse-java-google-style.xml")
        trimTrailingWhitespace()
        endWithNewline()
    }
}

//checkstyle {
//    toolVersion = '10.12.2'
//    configFile = file("${rootDir}/checkstyle.xml")
//}
//
//checkstyleMain {
//    source = fileTree('.') {
//        excludes = ['.*/**', 'gradle*', 'build/**', '*.iml', '*.log', '**/*.jar']
//    }
//}

tasks.named('check') {
    dependsOn 'spotlessCheck'
//    , 'checkstyleMain'
}
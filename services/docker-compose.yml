services:
    customerdb-master:
        image: postgres:17.5
        container_name: customerdb-master
        environment:
            POSTGRES_USER: mini
            POSTGRES_DB: customer
            POSTGRES_PASSWORD: mini1234
            POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
            POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
        command: |
            postgres 
            -c wal_level=replica 
            -c hot_standby=on 
            -c max_wal_senders=10 
            -c max_replication_slots=10 
            -c hot_standby_feedback=on
        volumes:
            - ./postgres/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
            - ./volumes/postgresql/write/data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U mini -d customer"]
            interval: 10s
            timeout: 10s
            retries: 3        

    customerdb-read:
        image: postgres:17.5
        container_name: customerdb-read

        ports:
            - 5433:5432
        environment:    
            PGUSER: replicator
            PGPASSWORD: mini1234        
        command: |
            bash -c "
            rm -rf /var/lib/postgresql/data/*
            until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=customerdb-master --port=5432
            do
            echo 'Waiting for primary to connect...'
            sleep 1s
            done
            echo 'Backup done, starting replica...'
            chown -R postgres:postgres /var/lib/postgresql/data
            chmod 0700 /var/lib/postgresql/data
            exec gosu postgres postgres
            "
        volumes:
            - ./volumes/postgresql/read1/data:/var/lib/postgresql/data                
        depends_on:
            - customerdb-master



    redismini:
        image: miniredis
        container_name: redismini
        build:
            context: ./redis-mini
        ports:
            - 6379:6379

    redismini-slave:
        image: miniredis
        container_name: redismini-slave
        build:
            context: ./redis-mini
        command: ["redis-server", "--replicaof", "redismini", "6379"]
        ports:
            - 6380:6379
        depends_on:
            - redismini

    redissentinel:
        image: sentinel
        container_name: redissentinel
        build:
            context: ./sentinel
        ports:
            - 26379:26379
        depends_on:
            - redismini

    redissentinel-2:
        image: sentinel
        container_name: redissentinel-2
        build:
            context: ./sentinel
        ports:
            - 26380:26379
        depends_on:
            - redismini

    